buildscript {
    ext {
        protobufVersion = '3.6.1'
        protobufPluginVersion = '0.8.14'
        grpcVersion ='1.57.2'
    }
}

plugins {
    id 'java' // Java 프로젝트 설정
    id 'com.google.protobuf' version "${protobufPluginVersion}"
    id 'idea'
    id 'java-library' // api 의존성
}

group 'study'
version ''

repositories {
    mavenCentral()
}

dependencies {
    // 상위 모듈로 의존성 전파 >> java-library 플러그인 필요
    api "io.grpc:grpc-protobuf:${grpcVersion}" // 동일
    api "io.grpc:grpc-stub:${grpcVersion}" // 동일
    api "javax.annotation:javax.annotation-api:1.3.2" // 동일
}

protobuf {
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}:osx-x86_64"
        }
    }

    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}:osx-x86_64"
    }
//    generatedFilesBaseDir = "$projectDir/src/generated"
//
//    clean {
//        delete generatedFilesBaseDir
//    }


    generateProtoTasks {
//        all()*.plugins {
//            grpc {}
//        }
        ofSourceSet('main')*.plugins {
        grpc {}
        }
    }
    /*
    서버측만 구현 (Stub 제외) 하고 싶을 때 필요한 설정
    generateProtoTasks {
        all().forEach { task ->
            // gRPC 코드 생성 플러그인 설정
            task.plugins {
                grpc {
                    artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}:osx-x86_64"
                }
            }
            // 클라이언트 Stub(Java 코드) 생성을 제외
            task.builtins {
                remove("java") // 기본 Java 코드 생성기 제외
            }
        }
    }
     */

}

/* IntelliJ IDEA에서 Protobuf 소스 경로를 인식하도록 설정 (주석 처리됨, 필요시 활성화 가능) */
idea {
    module {
        sourceDirs += file("build/generated/source/proto/main/java")
        sourceDirs += file("build/generated/source/proto/main/grpc")
    }
}


test {
    useJUnitPlatform()
}
